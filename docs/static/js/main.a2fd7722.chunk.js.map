{"version":3,"sources":["components/Institucion.jsx","components/Inicio.jsx","components/NoRoute.jsx","components/SingleInstitucion.jsx","components/Crud.jsx","components/CrudCreate.jsx","components/CrudRemove.jsx","components/Router.js","components/Usuarios.jsx","App.js","serviceWorker.js","index.js"],"names":["Institucion","react_default","a","createElement","Card","Content","Image","floated","size","src","Header","Meta","Description","extra","className","Button","basic","color","Component","Inicio","Group","this","props","instituciones","map","i","index","Institucion_Institucion","institucion","key","NoRoute","Container","SingleInstitucion","console","log","Segment","Crud","Table","compact","celled","definition","Row","HeaderCell","Body","repo","usuarios","usuario","Cell","collapsing","react_router_dom","to","concat","nombre","telefono","email","tipo","Footer","fullWidth","colSpan","icon","labelPosition","Icon","name","CrudCreate","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChangeNombre","bind","assertThisInitialized","onChangeTelefono","onChangeEmail","onChangeTipo","onSubmit","create","id","state","e","setState","target","value","preventDefault","editarUsuario","crearUsuario","finalizar","react_router","Form","Field","placeholder","onChange","type","label","control","defaultValue","CrudRemove","eliminar","eliminarUsuario","onClick","width","Router","path","component","render","Inicio_Inicio","match","params","SingleInstitucion_SingleInstitucion","data","Crud_Crud","exact","CrudCreate_CrudCreate","CrudRemove_CrudRemove","Usuarios","_useState","useState","_useState2","slicedToArray","u","setU","setUsuarios","toConsumableArray","splice","App","Router_Router","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2fd7722.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Card, Image, Button} from 'semantic-ui-react';\r\n\r\nexport default class Institucion extends Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <Card.Content>\r\n          <Image floated='right' size='mini' src='/images/avatar/large/steve.jpg' />\r\n          <Card.Header>Steve Sanders</Card.Header>\r\n          <Card.Meta>Friends of Elliot</Card.Meta>\r\n          <Card.Description>\r\n            Steve wants to add you to the group <strong>best friends</strong>\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          <div className='ui two buttons'>\r\n            <Button basic color='green'>\r\n              Approve\r\n            </Button>\r\n            <Button basic color='red'>\r\n              Decline\r\n            </Button>\r\n          </div>\r\n        </Card.Content>\r\n    </Card>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Card} from \"semantic-ui-react\"\r\nimport Institucion from './Institucion';\r\n\r\nexport default class Inicio extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Estamos en inicio</h1>\r\n        <Card.Group>\r\n          {\r\n            this.props.instituciones.map((i, index) =>{\r\n              return <Institucion institucion={i} key={index}></Institucion>\r\n            })\r\n          }\r\n        </Card.Group>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Container, Header } from 'semantic-ui-react';\r\n\r\nexport default class NoRoute extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Header>404 no found</Header>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Segment, Header} from 'semantic-ui-react';\r\n\r\nexport default class SingleInstitucion extends Component {\r\n  render() {\r\n    console.log(this.props)\r\n    return (\r\n      <div>\r\n        <Segment>\r\n          <Header>\r\n            Institucion {this.props.institucion}   \r\n          </Header>\r\n        </Segment>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Button, Icon, Table } from 'semantic-ui-react';\r\n\r\nexport default class Crud extends Component {\r\n  render() {\r\n    console.log(this.props)\r\n    return (\r\n      <Table compact celled definition>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell />\r\n            <Table.HeaderCell>Nombre</Table.HeaderCell>\r\n            <Table.HeaderCell>Teléfono</Table.HeaderCell>\r\n            <Table.HeaderCell>E-mail</Table.HeaderCell>\r\n            <Table.HeaderCell>Tipo</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          {\r\n            this.props.repo.usuarios.map((usuario, index) => \r\n              <Table.Row key={index}>\r\n                <Table.Cell collapsing>\r\n                  <Link to={`/crud-editar/${index}`}>\r\n                    <Button basic>Editar</Button>\r\n                  </Link>\r\n                  <Link to={`/crud-remove/${index}`}>\r\n                    <Button basic color='red'>Eliminar</Button>\r\n                  </Link>\r\n                </Table.Cell>\r\n                <Table.Cell>{usuario.nombre}</Table.Cell>\r\n                <Table.Cell>{usuario.telefono}</Table.Cell>\r\n                <Table.Cell>{usuario.email}</Table.Cell>\r\n                <Table.Cell>{usuario.tipo}</Table.Cell>\r\n              </Table.Row>)\r\n          }\r\n        </Table.Body>\r\n\r\n        <Table.Footer fullWidth>\r\n          <Table.Row>\r\n            <Table.HeaderCell />\r\n            <Table.HeaderCell colSpan='4'>\r\n              <Link to=\"/crud-create\">\r\n                <Button floated='right' icon labelPosition='left'  size='small'>\r\n                  <Icon name='user' /> Crear usuario\r\n                </Button>\r\n              </Link>\r\n            </Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Footer>\r\n      </Table>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button, Form } from 'semantic-ui-react'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class CrudCreate extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeNombre = this.onChangeNombre.bind(this);\r\n    this.onChangeTelefono = this.onChangeTelefono.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeTipo = this.onChangeTipo.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    if (this.props.create === false) {\r\n      const usuario = this.props.repo.usuarios[this.props.id];\r\n      this.state = {\r\n        nombre: usuario.nombre,\r\n        telefono: usuario.telefono,\r\n        email: usuario.email,\r\n        tipo: usuario.tipo\r\n      }\r\n    } else {\r\n      this.state = {\r\n        nombre: '',\r\n        telefono: '',\r\n        email:'',\r\n        tipo: 'empleado'\r\n      }\r\n    }\r\n    console.log(\"es crear?\", this.props.create, this.state);\r\n  }\r\n\r\n  onChangeNombre(e) {\r\n    this.setState({\r\n      nombre: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeTelefono(e) {\r\n    this.setState({\r\n      telefono: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeTipo(e) {\r\n    this.setState({\r\n      tipo: e.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const usuario = {\r\n      nombre: this.state.nombre,\r\n      telefono: this.state.telefono,\r\n      email: this.state.email,\r\n      tipo: this.state.tipo\r\n    };\r\n     \r\n    if (this.props.create === false) {\r\n      this.props.repo.editarUsuario(usuario, this.props.id);\r\n    } else {\r\n      this.props.repo.crearUsuario(usuario);\r\n    }\r\n\r\n    \r\n    this.setState({\r\n      finalizar: true\r\n    })\r\n    console.log(this.props)\r\n  }\r\n\r\n  render() {\r\n    if (this.state.finalizar === true) {\r\n      return <Redirect to='/crud' />\r\n    }\r\n\r\n    return (\r\n      <Form onSubmit={this.onSubmit}>\r\n        <Form.Field>\r\n          <label>Nombres</label>\r\n          <input placeholder='Nombres' value={this.state.nombre} onChange={this.onChangeNombre}/>\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Telefono</label>\r\n          <input type=\"number\" placeholder='Teléfono' value={this.state.telefono} onChange={this.onChangeTelefono}/>\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input type=\"email\" placeholder='Email' value={this.state.email} onChange={this.onChangeEmail}/>\r\n        </Form.Field>\r\n        <Form.Field label='Tipo' control='select' value={this.state.tipo} onChange={this.onChangeTipo}>\r\n          <option value='empleado' defaultValue>Empleado</option>\r\n          <option value='rrhh'>Recursos Humanos</option>\r\n        </Form.Field>\r\n        <Button type='submit'>{ this.props.create === false ? 'Editar' : 'Guardar' }</Button>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Table, Button, Container } from 'semantic-ui-react'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class CrudRemove extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.eliminar = this.eliminar.bind(this);\r\n    const usuario = this.props.repo.usuarios[this.props.id];\r\n    this.state = {\r\n      nombre: usuario.nombre,\r\n      telefono: usuario.telefono,\r\n      email: usuario.email,\r\n      tipo: usuario.tipo,\r\n      eliminar: false\r\n    }\r\n  }\r\n\r\n  eliminar() {\r\n    this.setState({\r\n      eliminar: true\r\n    })\r\n    this.props.repo.eliminarUsuario(this.props.id);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.eliminar === true) {\r\n      return <Redirect to=\"/crud\"></Redirect>\r\n    }\r\n    return (\r\n      <Container>\r\n        <Button basic color='red' onClick={this.eliminar}>Eliminar</Button>\r\n        <Table definition>\r\n          <Table.Body>\r\n            <Table.Row>\r\n              <Table.Cell width={2}>Nombre</Table.Cell>\r\n              <Table.Cell>{this.state.nombre}</Table.Cell>\r\n            </Table.Row>\r\n            <Table.Row>\r\n              <Table.Cell>Teléfono</Table.Cell>\r\n              <Table.Cell>{this.state.telefono}</Table.Cell>\r\n            </Table.Row>\r\n            <Table.Row>\r\n              <Table.Cell>Email</Table.Cell>\r\n              <Table.Cell>{this.state.email}</Table.Cell>\r\n            </Table.Row>\r\n            <Table.Row>\r\n              <Table.Cell>Tipo</Table.Cell>\r\n              <Table.Cell>{this.state.tipo}</Table.Cell>\r\n            </Table.Row>\r\n          </Table.Body>\r\n        </Table>\r\n      </Container>\r\n      \r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {BrowserRouter, Route, Switch, Link} from 'react-router-dom';\r\nimport { Button } from 'semantic-ui-react'\r\n\r\nimport Inicio from './Inicio'\r\nimport NoRoute from './NoRoute'\r\nimport SingleInstitucion from './SingleInstitucion'\r\nimport Crud from './Crud'\r\nimport CrudCreate from './CrudCreate'\r\nimport CrudRemove from './CrudRemove'\r\n\r\nexport default class Router extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Link to=\"/crud\">\r\n          <Button>Usuarios</Button>\r\n        </Link>\r\n        <Switch>\r\n          <Route path=\"/inicio\" component={Inicio}></Route>\r\n          <Route path=\"/otraruta\" component={Inicio}></Route>\r\n          <Route path=\"/pruebas\" render={() => {\r\n            return <Inicio instituciones={this.props.instituciones}></Inicio>\r\n          }}></Route>\r\n          <Route path=\"/institucion/:id\" render={(props)=>{\r\n            const {match} = props;\r\n            const id = match.params.id;\r\n            console.log(id)\r\n            return <SingleInstitucion institucion={this.props.instituciones.data[id]}></SingleInstitucion>\r\n          }}></Route>\r\n          <Route path=\"/crud\" render={()=>{\r\n            return <Crud repo={this.props.repo}></Crud>\r\n          }}></Route>\r\n          <Route exact path=\"/crud-create\" render={()=>{\r\n            return <CrudCreate repo={this.props.repo}></CrudCreate>\r\n          }}></Route>\r\n          <Route path=\"/crud-editar/:id\" render={(props)=>{\r\n            console.log(props);\r\n            return <CrudCreate create={false} repo={this.props.repo} id={props.match.params.id}></CrudCreate>\r\n          }}></Route>\r\n          <Route path=\"/crud-remove/:id\" render={(props)=>{\r\n            return <CrudRemove repo={this.props.repo} id={props.match.params.id}></CrudRemove>\r\n          }}></Route>\r\n          <Route path=\"\" component={NoRoute}></Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default class Usuarios{\r\n\r\n  usuarios;\r\n  setUSuarios;\r\n  constructor(data) {\r\n    const [u, setU] = useState(data || []);\r\n    this.usuarios = u;\r\n    this.setUsuarios = setU;\r\n  }\r\n  \r\n  crearUsuario(usuario) {\r\n    this.setUsuarios([...this.usuarios, usuario]);\r\n  }\r\n\r\n  editarUsuario(usuario,  id){\r\n    let usuarios = this.usuarios;\r\n    usuarios[id] = usuario;\r\n    this.setUsuarios(usuarios);\r\n  }\r\n\r\n  eliminarUsuario(id){\r\n    let usuarios = this.usuarios;\r\n    usuarios.splice(id, 1);\r\n    this.setUsuarios(usuarios);\r\n  } \r\n}","import React from 'react';\nimport { Container, Header} from \"semantic-ui-react\";\nimport 'semantic-ui-css/semantic.min.css'\n\nimport Router from './components/Router'\nimport instituciones from './datos/datos.json'\nimport Usuarios from './components/Usuarios'\nimport './App.css';\n\nfunction App() {\n  const repo = new Usuarios([]);   \n  return (\n    <Container>\n      <Header>Crud de usuarios</Header>\n      <Router instituciones={instituciones} repo={repo}></Router>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}